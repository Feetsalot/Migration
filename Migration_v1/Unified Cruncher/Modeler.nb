(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     24624,        627]
NotebookOptionsPosition[     22678,        556]
NotebookOutlinePosition[     23023,        571]
CellTagsIndexPosition[     22980,        568]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Getting the Data From a Formated File", "Chapter",
 CellChangeTimes->{{3.6705045993559465`*^9, 3.6705046089109473`*^9}}],

Cell[CellGroupData[{

Cell["Getting the List From the file generated by the c++ project", "Section",
 CellChangeTimes->{{3.6705058639388466`*^9, 3.6705058776534324`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\</Unified Cruncher/formated.txt\>\""}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6705044644177666`*^9, 3.6705044768468437`*^9}, 
   3.6705048906440735`*^9, {3.670505205102272*^9, 3.670505229913767*^9}, {
   3.6705053323505096`*^9, 3.6705053635275793`*^9}, 3.6705055431264877`*^9, {
   3.6705058471687393`*^9, 3.6705058506438293`*^9}, {3.670516688125468*^9, 
   3.670516700861705*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Import\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", ButtonNote -> \
\\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6705053537896795`*^9, 3.6705053643478928`*^9}, 
   3.6705055619137425`*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.670505353790689*^9, 3.6705053643488927`*^9}, 
   3.670505561915744*^9}],

Cell[BoxData[
 RowBox[{"change", " ", "Make", " ", "path", " ", "sure", " ", "the", " ", 
  "you"}]], "Output",
 CellChangeTimes->{{3.670505353790689*^9, 3.6705053643488927`*^9}, 
   3.670505561915744*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$RootDirectory"], "Input",
 CellChangeTimes->{{3.6705052720751677`*^9, 3.6705052819730544`*^9}}],

Cell[BoxData["\<\"\"\>"], "Output",
 CellChangeTimes->{{3.6705052758901668`*^9, 3.6705052862454205`*^9}, 
   3.6705055622101617`*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
s is now a list in this formate {\[OpenCurlyDoubleQuote]country\
\[CloseCurlyDoubleQuote],{feild1,feild2,year},{feild1,feild2,year} ...
Each feild in a backets is a new data point from those feilds\
\>", "Section",
 CellChangeTimes->{{3.6705047046595526`*^9, 3.6705047707387085`*^9}}],

Cell[CellGroupData[{

Cell["\<\
This function will get the data that is only for the country specified\
\>", "Section",
 CellChangeTimes->{{3.670504909990992*^9, 3.670504940788224*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getCount", "[", "name_", "]"}], ":=", 
  RowBox[{
   RowBox[{"l", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "name"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
This Fuction will return the raw data points: \
{{feild1,feild2}1,{feild1,feild2}2...\
\>", "Section",
 CellChangeTimes->{{3.6705049619647574`*^9, 3.670505013436495*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPure", "[", "country_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"getCount", "[", "country", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;"}], "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", 
     RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
These Fuctions will Create non linear Regressions one with a log base the \
other with a exponent base.
Remeber the first feild is the x axis (domain) and the second feild is the y\
\>", "Section",
 CellChangeTimes->{{3.6705051232576914`*^9, 3.670505179689212*^9}, {
  3.6705056518497286`*^9, 3.670505685338363*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nlmLog", "[", "country_", "]"}], ":=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{
    RowBox[{"getPure", "[", "country", "]"}], ",", 
    RowBox[{"c", "*", 
     RowBox[{"Log", "[", 
      RowBox[{"a", "+", 
       RowBox[{"b", "*", "x"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "x"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nlmE", "[", "country_", "]"}], ":=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{
    RowBox[{"getPure", "[", "country", "]"}], ",", 
    RowBox[{
     RowBox[{"a", "*", 
      RowBox[{"x", "^", "2"}]}], "+", 
     RowBox[{"b", "*", "x"}], "+", "c"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "x"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</formated.txt\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6705053921613626`*^9, 3.6705053948529215`*^9}, {
  3.670505473729319*^9, 3.6705055239715204`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6705056179372864`*^9, 3.6705056183490696`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now These Function will Graph the Models with the underlying data points. \
Again one for each kind of model\
\>", "Section",
 CellChangeTimes->{{3.6705056270819397`*^9, 3.670505646700593*^9}, {
  3.670505696332539*^9, 3.670505704440324*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SideGraphLog", "[", "country_", "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"getPure", "[", "country", "]"}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"nlmLog", "[", "country", "]"}], "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"getPure", "[", "country", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{"getPure", "[", "country", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
    "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SideGraphE", "[", "country_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"getPure", "[", "country", "]"}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"nlmE", "[", "country", "]"}], "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"getPure", "[", "country", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{"getPure", "[", "country", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
    "]"}]}]], "Input"],

Cell["", "Subsection",
 CellChangeTimes->{{3.670505615201234*^9, 3.670505615893306*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing", "Subchapter",
 CellChangeTimes->{{3.6705057370019197`*^9, 3.670505737729683*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SideGraphE", "[", "\"\<Germany\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.670505745014382*^9, 3.670505753777288*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{47.5999984741211, 30.13}, {46.9000015258789, 31.14}, {
       44.9000015258789, 31.51}, {51.7999992370605, 31.29}, {56., 32.4}, {
       55.7000007629395, 32.78}}]}, {}}, {}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
fY8=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{44.72656404972076, 29.997500000000002`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{44.9000015258789, 56.}, {30.13, 32.78}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.670505754652986*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SideGraphLog", "[", "\"\<United States\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6705057582264757`*^9, 3.6705057718890796`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NonlinearModelFit", "::", "cvmit"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Failed to converge to the requested accuracy or precision \
within \[NoBreak]\\!\\(\\*RowBox[{\\\"100\\\"}]\\)\[NoBreak] iterations. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NonlinearModelFit\\\", \
ButtonNote -> \\\"NonlinearModelFit::cvmit\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705057729275064`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{25.8999996185303, 41.06}, {29., 40.46}, {10., 41.75}, {
       12.6999998092651, 40.62}, {6., 40.46}, {8.69999980926514, 
       40.86}}]}, {}}, {}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVz308FHYcB/DTwlLdlFVXTggpytPd4fhl361fayWah0P10omhtENMkixd
niZObnuZh+ThRWEKa0TTTvEqRR5uRdPykKTwcjV3WR733R/f1+f1/uf7/XwN
/cPcA5cwGAwXnP/TQj1en8FgwbRd9bGJUxRMvXfv42uywPtGSvoY2qCcGRPB
ZMHMM2HNa/Rql3z5SzYLlvG0PrxET/90K/EBnwWfaOxPeY5uMlaNSyNZsGZT
zpUOtDsNqTcZZUEv1/JFNTrqvKebc8d6qDnkL4hC59rPkphmXWiLVBoroymI
Dds6wn/Wg+uqK6JYNO+zq/4O/vqwEBS0uBT94oGZz1S5AVw0vh2WcJLCCsla
dwupIVzo2nx4BbpENF7Wl74JLAo7N6dGUSgOvsd4m2AE15uabLXQ4tla85Dj
xuDS9uyB9DsKXRWSG4JAE4hIa7FehWYoY5lXXDeDXYtIPzuSQpZ3WIiQYwpx
+9MOGKJze5yNUs23QIrSKKAwgkK8glSt19kKTi0x06box0brsjcwzaC85JVX
6QkKkojpcwlLzQE4DDUTtNmhCSePMXPYkDjjcC2cAlf40OfH4W1gtlziYI42
mG/cZd++HRaaL7fXhFE4XZed4dpqAUnMv/Qt0A6pp/seySxhwSRXVhlKYTLW
fs7Hwwp63bSmOeiTUNZwvssKlhisGasWUVC4FQ/67bKGWn5ktC06L1w/5Z+b
1lAaXej1x7cUFtir+gnXBjp/ez/uiHZfm57PL7OByNh6g7vHKfjmxy1XmHCg
zG+rphM6z/rdB58iDuz8NWtHYwiFh6sVblGfcuFs9DXWTnT1uSM+ezO5IErq
LZAdo5C843BrtzoP7h0QdFB0pkZ//cpTPKgzMnZvP4r3fOXeS5Q82KqZcmYP
eqmam195sC1cLAvw6AymILKh65aN2ILY+Ov2vej71XfsdA/awYQ0SNkRRMGT
3H061G4HPWfqIgXobIHdliN77KFxMDmjO5DCo99th6S37eF9YZ3QC91QVfFV
nCMfstIe3+/6hsLT6iIr9k0+1L1yTXRBv17YJBaZOYBmfPycPIBCVR9LHH3V
ASQNr9Rd0cEf5Yxz2I6g3dDY1u2P/fmXnpRIHCGX7TfhjVbO6YR2aBE4cSsv
588j+P/KteEV3xPIrkn62Ae9j2d7ryqewOk06aAAre3rxa4VE+AUXqr3QOdW
ZrXKkgjoRfxydD+60nmd4RMJgXjZjdYv0fIfWPLFywSm5kNTeOiNGrpcgYyA
uipDQwc9vN0x9eAdAswR/35tdJng0KCwmUDmSm4dE21dmpcWcp+ASrM7UAtN
KXvkbCeBkSJVixo6RKyXVTFAoDf4jfitHwXLih0TVUO4r7/g4CRa2e37Re0w
gfQ0T5sJdJzh5UnZKAE/af3QKPpi08bdTxQEZuA4DKA9Xzvl970jsC1Gh/Uc
vV5bODUwRUD6pkHRhy4WFhSMTRMYjVAr6EEHJ8tUig8E5BeKTz5Gb6sacFbN
Ehj++3NXOfptz2LRzDwBVtCASRe6dkH/38VFAqGmsfOP0P8B5D4d+w==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5.640625000000001, 40.395500000000006`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{6., 29.}, {40.46, 41.75}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.670505773207901*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
If the model generated does not fit the data this will happen\
\>", "Subchapter",
 CellChangeTimes->{{3.670505792506575*^9, 3.6705058105199647`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SideGraphLog", "[", "\"\<France\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.670505830217998*^9, 3.670505831320877*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NonlinearModelFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"13.168248111624656`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"19.82127914106764`\\\", \\\
\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"13.206777367334915`\\\", \\\"\[VeryThinSpace]\\\"}], \
\\\"+\\\", RowBox[{\\\"19.82127914106764`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\
\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"12.414006173235983`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"19.82127914106764`\\\", \\\" \
\\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"12.403314897204474`\\\", \\\"\[VeryThinSpace]\\\"}], \
\\\"+\\\", RowBox[{\\\"19.82127914106764`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\
\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"13.564006173235981`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"19.82127914106764`\\\", \\\" \
\\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"16.706893925982996`\\\", \\\"\[VeryThinSpace]\\\"}], \
\\\"+\\\", RowBox[{\\\"19.82127914106764`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\
\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"15.468248111624657`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"19.82127914106764`\\\", \\\" \
\\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"16.484161468625175`\\\", \\\"\[VeryThinSpace]\\\"}], \
\\\"+\\\", RowBox[{\\\"19.82127914106764`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\
\"}]}]}], \\\"}\\\"}]\\)\[NoBreak] is not a list of real numbers with \
dimensions \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"8\\\", \\\"}\\\"}]\\)\
\[NoBreak] at \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \
\\\",\\\", \\\"b\\\", \\\",\\\", \\\"c\\\"}], \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"856.6789425021543`\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"59.678731846174486`\\\"}], \\\",\\\", \
\\\"6.309309107410385`\\\"}], \\\"}\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NonlinearModelFit\\\", ButtonNote -> \
\\\"NonlinearModelFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6705058325091486`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{40., 33.1}, {41.2000007629395, 33.35}, {39.7000007629395, 
       33.78}, {37., 33.08}, {39.7000007629395, 32.63}, {41.5, 29.92}, {40., 
       30.8}, {40.5999984741211, 29.93}}]}, {}}, {}}, 
   GraphicsComplexBox[CompressedData["
1:eJwVkH1Q03Ucx+cWiKA8hGFS4lOOcEmD9Ig54O3v+/X7kQaaSCkeRFibEA6J
tAHniRKLU07ZgeIp1oEIchegVohX7DRURs5SOMwwHE+GzvChs7Cl58Q/3vf6
6/X64z13w+YkvVwmk0VO7DltURdksh0SykuN7IZV4GRVSNrKMgnCO/VV+U8C
nXmt4ZYDEra98OfcjecFFs5U+8vrJGSuvkXlNoHQ3KZ8TYuEX6v2mY9eFFjF
De8bfpBg7d/OXL9M+MMK3nFBgs01cj+gWyDzqaMhoEdC7Us1e7N6BY5c/NES
6pAwOcn4Wss1AVXGtt1GpwSvh1Gft10XGNhS6Gr4V8KV3jP+7hsCI0mp+f6T
GPIS2q/4DAkUDcVtx1SG8dHu9Z43BcTdD10fvcyg9a8ui70lkHpOX9I2nyG7
z/uI9o7AV0GNJU/fZBhKuNxnuitgCh7zmapl+LRlaXvNA4Ga24F18cSQs1rD
LQ8F/nmr4HjhGoYlp5yJ7eMCB+I77H98wNARfDT9uEtA378iTZ3NEHFPnud4
ImCf3b1VZ2JYFhRkeewW2Lko5uuqYgYfw/7Ng3LChtOjS6/uZfjse3WrzJNQ
MW2Lkx1iWHts3StOL8L6QEVIQT1D8Yky3VkfQmLVZVvtSQb73y+u7PEllI8U
7fy/naHS5ghpDiA8aTaeED8zlJ7NWNExnSAPSzOkXGUIU2aGdM4grM1Rv3F4
kME3Oj23MphwTb1sY88YQ+omza5DswgN1iXfvv3fxB+xc0zZcwi+j1UlegXH
bt/uc6r5hNrWdLvZj0NFg7oFSsIXGtO834I5rPhL53ydYNFeujczlGOgsXT6
qIow5uVh3xPJEanc9E1zOGHIHBfeFcMxufDUg48jCJN2tHmOx3N8oggzJS8m
5PLA+2ve49D83pXlF0Xw/rIpoT6DY5GXMlyuIWjzKcJq5CjbozTf1BKsizsX
eBRwOGanjFbEEbJyisth5hisKKjMlwj6vHlTmiwcMcn91QuXE1zK81Mc1RyP
hgP7LhHh9Lq6IkXjRP/gjOH6dwidyQaPlO843L0D13WJhOgujdt9hsMYE+0X
+y7hGW77VO4=
    "], {}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{36.9296875, 29.727000000000004`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{37., 41.5}, {29.92, 33.78}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.670505832579199*^9}]
}, Open  ]],

Cell["", "Subsection"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{959, 771},
WindowMargins->{{Automatic, 113}, {Automatic, 57}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 126, 1, 64, "Chapter"],
Cell[CellGroupData[{
Cell[731, 27, 148, 1, 63, "Section"],
Cell[CellGroupData[{
Cell[904, 32, 627, 14, 52, "Input"],
Cell[1534, 48, 517, 11, 21, "Message"],
Cell[2054, 61, 128, 2, 31, "Output"],
Cell[2185, 65, 205, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2427, 74, 110, 1, 31, "Input"],
Cell[2540, 77, 133, 2, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[2700, 83, 294, 5, 131, "Section"],
Cell[CellGroupData[{
Cell[3019, 92, 163, 3, 49, "Section"],
Cell[3185, 97, 420, 13, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3642, 115, 180, 4, 97, "Section"],
Cell[3825, 121, 316, 10, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4178, 136, 326, 6, 165, "Section"],
Cell[4507, 144, 394, 11, 31, "Input"],
Cell[4904, 157, 393, 11, 31, "Input"],
Cell[5300, 170, 267, 6, 31, "Input"],
Cell[5570, 178, 96, 1, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5703, 184, 252, 5, 97, "Section"],
Cell[5958, 191, 803, 23, 72, "Input"],
Cell[6764, 216, 822, 23, 72, "Input"],
Cell[7589, 241, 88, 1, 43, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7714, 247, 97, 1, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[7836, 252, 143, 2, 31, "Input"],
Cell[7982, 256, 6207, 113, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14226, 374, 155, 2, 31, "Input"],
Cell[14384, 378, 533, 10, 21, "Message"],
Cell[14920, 390, 2742, 56, 242, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17711, 452, 159, 3, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[17895, 459, 144, 2, 31, "Input"],
Cell[18042, 463, 2344, 36, 56, "Message"],
Cell[20389, 501, 2224, 48, 251, "Output"]
}, Open  ]],
Cell[22628, 552, 22, 0, 43, "Subsection"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
